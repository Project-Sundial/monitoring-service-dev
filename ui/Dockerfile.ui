# Dev config
# FROM node:alpine as builder

# WORKDIR /app

# EXPOSE 3000

# RUN --mount=type=bind,source=package.json,target=package.json \
#     --mount=type=bind,source=package-lock.json,target=package-lock.json \
#     --mount=type=cache,target=/root/.npm \
#     npm ci --include=dev

# COPY . .

# CMD npm start

# Prod config
# ARG NODE_VERSION=20.2.0

# FROM node:${NODE_VERSION}-alpine as builder

# WORKDIR /app

# COPY package.json package.json
# COPY package-lock.json package-lock.json

# RUN npm install --production

# COPY . .

# RUN npm run build

# FROM nginx:alpine

# WORKDIR /usr/share/nginx/html

# RUN rm -rf *

# COPY --from=builder /app/build .

# ENTRYPOINT ["nginx", "-g", "daemon off;"]

#prod config that works but is still huge
# ARG NODE_VERSION=20.2.0

# FROM node:${NODE_VERSION}-alpine

# WORKDIR /ui

# # Copies package.json and package-lock.json to Docker environment
# COPY package*.json ./

# # Installs all node packages
# RUN npm install

# # Copies everything over to Docker environment
# COPY . .

# # Build for production.
# RUN npm run build --production

# # Install `serve` to run the application.
# RUN npm install -g serve

# # Uses port which is used by the actual application
# EXPOSE 3000

# # Run application
# #CMD [ "npm", "start" ]
# CMD serve -s build


